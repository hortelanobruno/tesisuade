/*
 * PanelSinonimos.java
 *
 * Created on 31 de julio de 2008, 23:33
 */
package com.ontotravel.gui.panels.sinonimos;

import com.ontotravel.gui.FileChooser;
import com.ontotravel.gui.FramePrincipal;
import com.ontotravel.mvc.controller.ControladorPanelSinonimos;
import com.ontotravel.mvc.model.BusinessDelegate;
import com.ontotravel.mvc.view.VistaSinonimos;
import com.ontotravel.util.Constantes;
import com.ontotravel.vo.IndividualSinonimoVO;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author  Administrador
 */
public class PanelSinonimos extends javax.swing.JPanel {

    private FileChooser chooser;
    private FramePrincipal main;
    private VistaSinonimos vista;
    private String urlOWL;
    private String chooserButton;
    private boolean cargarArbol;
    private TreeSelectionEvent eventoTree;
    private boolean cargarInstancia;
    private boolean agregarSinonimo;
    private boolean agregarTraduccion;
    private boolean removerSinonimo;
    private boolean removerTraduccion;
    private int indexDefault = 0;
    private String sinoSelec;

    /** Creates new form PanelSinonimos */
    public PanelSinonimos(FramePrincipal main, VistaSinonimos vista) {
        this.main = main;
        this.vista = vista;
        initComponents();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textFieldURL = new javax.swing.JTextField();
        buttonExaminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labelPalabra = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listSinonimos = new javax.swing.JList();
        buttonAddSinonimo = new javax.swing.JButton();
        buttonRemoveSinonimo = new javax.swing.JButton();
        panelAgregarSin = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        textFieldAgregarSin = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listTraduccion = new javax.swing.JList();
        panelAgregarTraduccion = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        textFieldAgregarTra = new javax.swing.JTextField();
        buttonAddTraduccion = new javax.swing.JButton();
        buttonRemoveTraduccion = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeIndividual = new javax.swing.JTree();
        jLabel7 = new javax.swing.JLabel();
        buttonAgregarPalabra = new javax.swing.JButton();
        buttonRemoverPalabra = new javax.swing.JButton();
        panelAgregarPalabra = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tfNombrePalabra = new javax.swing.JTextField();
        buttonAceptarPalabra = new javax.swing.JButton();
        buttonCancelarPalabra = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1023, 532));

        jLabel1.setText("Ontologia Vocabulario");

        buttonExaminar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\view.gif")); // NOI18N
        buttonExaminar.setContentAreaFilled(false);
        buttonExaminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExaminarActionPerformed(evt);
            }
        });

        listSinonimos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listSinonimos);

        buttonAddSinonimo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\add_obj.gif")); // NOI18N
        buttonAddSinonimo.setContentAreaFilled(false);
        buttonAddSinonimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddSinonimoActionPerformed(evt);
            }
        });

        buttonRemoveSinonimo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\delete_obj.gif")); // NOI18N
        buttonRemoveSinonimo.setContentAreaFilled(false);
        buttonRemoveSinonimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveSinonimoActionPerformed(evt);
            }
        });

        jLabel5.setText("Nombre");

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\cancel.gif")); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\ok.gif")); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        textFieldAgregarSin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldAgregarSinKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelAgregarSinLayout = new javax.swing.GroupLayout(panelAgregarSin);
        panelAgregarSin.setLayout(panelAgregarSinLayout);
        panelAgregarSinLayout.setHorizontalGroup(
            panelAgregarSinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarSinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textFieldAgregarSin, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
        panelAgregarSinLayout.setVerticalGroup(
            panelAgregarSinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarSinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel5)
                .addComponent(textFieldAgregarSin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2)
                .addComponent(jButton1))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
                    .addComponent(panelAgregarSin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(buttonAddSinonimo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRemoveSinonimo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonRemoveSinonimo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddSinonimo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAgregarSin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sinonimo", jPanel2);

        listTraduccion.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(listTraduccion);

        jLabel6.setText("Nombre");

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\ok.gif")); // NOI18N
        jButton5.setContentAreaFilled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\cancel.gif")); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        textFieldAgregarTra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldAgregarTraKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelAgregarTraduccionLayout = new javax.swing.GroupLayout(panelAgregarTraduccion);
        panelAgregarTraduccion.setLayout(panelAgregarTraduccionLayout);
        panelAgregarTraduccionLayout.setHorizontalGroup(
            panelAgregarTraduccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarTraduccionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(textFieldAgregarTra, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        panelAgregarTraduccionLayout.setVerticalGroup(
            panelAgregarTraduccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarTraduccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel6)
                .addComponent(textFieldAgregarTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton5)
                .addComponent(jButton3))
        );

        buttonAddTraduccion.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\add_obj.gif")); // NOI18N
        buttonAddTraduccion.setContentAreaFilled(false);
        buttonAddTraduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddTraduccionActionPerformed(evt);
            }
        });

        buttonRemoveTraduccion.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\delete_obj.gif")); // NOI18N
        buttonRemoveTraduccion.setContentAreaFilled(false);
        buttonRemoveTraduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveTraduccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(panelAgregarTraduccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(buttonAddTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRemoveTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonAddTraduccion)
                    .addComponent(buttonRemoveTraduccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAgregarTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Traduccion", jPanel3);

        jLabel2.setText("Palabra");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPalabra, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeIndividual.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeIndividual.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeIndividualValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(treeIndividual);

        jLabel7.setText("Palabra");

        buttonAgregarPalabra.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\add_obj.gif")); // NOI18N
        buttonAgregarPalabra.setContentAreaFilled(false);
        buttonAgregarPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarPalabraActionPerformed(evt);
            }
        });

        buttonRemoverPalabra.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\delete_obj.gif")); // NOI18N
        buttonRemoverPalabra.setContentAreaFilled(false);
        buttonRemoverPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverPalabraActionPerformed(evt);
            }
        });

        jLabel8.setText("Nombre");

        tfNombrePalabra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNombrePalabraKeyTyped(evt);
            }
        });

        buttonAceptarPalabra.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\ok.gif")); // NOI18N
        buttonAceptarPalabra.setContentAreaFilled(false);
        buttonAceptarPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAceptarPalabraActionPerformed(evt);
            }
        });

        buttonCancelarPalabra.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brunoli\\Documents\\NetBeansProjects\\OntoTravel\\icons\\cancel.gif")); // NOI18N
        buttonCancelarPalabra.setContentAreaFilled(false);
        buttonCancelarPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarPalabraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAgregarPalabraLayout = new javax.swing.GroupLayout(panelAgregarPalabra);
        panelAgregarPalabra.setLayout(panelAgregarPalabraLayout);
        panelAgregarPalabraLayout.setHorizontalGroup(
            panelAgregarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarPalabraLayout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(tfNombrePalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAceptarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancelarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelAgregarPalabraLayout.setVerticalGroup(
            panelAgregarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarPalabraLayout.createSequentialGroup()
                .addGroup(panelAgregarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(tfNombrePalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAceptarPalabra)
                    .addComponent(buttonCancelarPalabra))
                .addContainerGap(1, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(panelAgregarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                        .addComponent(buttonAgregarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRemoverPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(buttonRemoverPalabra)
                    .addComponent(buttonAgregarPalabra)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAgregarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(textFieldURL, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonExaminar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(293, 293, 293)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(buttonExaminar)
                    .addComponent(textFieldURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void buttonExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExaminarActionPerformed
//Filechooser para elegir el archivo owl
    chooser = new FileChooser(main, true, main.getConfiguration().getOwlDirectory());
    setUrlOWL(chooser.getPath());
    setChooserButton(chooser.getButton());
    if (chooserButton.equals("Cancel")) {
    } else {
        // Cargar los table
        main.getConfiguration().setDefaultURLOWLSinonimos(chooser.getPath());
        textFieldURL.setText(chooser.getPath());
        ((ControladorPanelSinonimos) vista.getControlador()).doCargarOWL(true);
    }
}//GEN-LAST:event_buttonExaminarActionPerformed

    private void buttonCargarActionPerformed(javax.swing.event.TreeSelectionEvent evt) {
        // Cargar solicitud en tablas
        this.eventoTree = evt;
        if (!eventoTree.getPath().getLastPathComponent().toString().equals("Palabras")) {
            ((ControladorPanelSinonimos) vista.getControlador()).doCargarInstancia(true);
        }
    }

private void buttonAddSinonimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddSinonimoActionPerformed
    this.panelAgregarSin.setVisible(true);
}//GEN-LAST:event_buttonAddSinonimoActionPerformed

private void buttonAddTraduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddTraduccionActionPerformed
    this.panelAgregarTraduccion.setVisible(true);
}//GEN-LAST:event_buttonAddTraduccionActionPerformed

private void buttonRemoveSinonimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveSinonimoActionPerformed
    if (listSinonimos.getSelectedIndex() != -1) {
        ((ControladorPanelSinonimos) vista.getControlador()).doRemoverSinonimo(true);
    }
}//GEN-LAST:event_buttonRemoveSinonimoActionPerformed

private void buttonRemoveTraduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveTraduccionActionPerformed
    if (listTraduccion.getSelectedIndex() != -1) {
        ((ControladorPanelSinonimos) vista.getControlador()).doRemoverTraduccion(true);
    }
}//GEN-LAST:event_buttonRemoveTraduccionActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    ((ControladorPanelSinonimos) vista.getControlador()).doAgregarSinonimo(true);
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.textFieldAgregarSin.setText("");
    this.panelAgregarSin.setVisible(false);
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    ((ControladorPanelSinonimos) vista.getControlador()).doAgregarTraduccion(true);
}//GEN-LAST:event_jButton5ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    this.textFieldAgregarTra.setText("");
    this.panelAgregarTraduccion.setVisible(false);
}//GEN-LAST:event_jButton3ActionPerformed

private void buttonCancelarPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarPalabraActionPerformed
    panelAgregarPalabra.setVisible(false);
    tfNombrePalabra.setText("");
}//GEN-LAST:event_buttonCancelarPalabraActionPerformed

private void buttonAgregarPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarPalabraActionPerformed
    panelAgregarPalabra.setVisible(true);
}//GEN-LAST:event_buttonAgregarPalabraActionPerformed

private void buttonAceptarPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAceptarPalabraActionPerformed
    String nombre = tfNombrePalabra.getText();
    nombre = nombre.trim();
    if (!nombre.isEmpty()) {
        //Compruebo que ya no exista
        ArrayList<String> individuals = (ArrayList<String>) ((BusinessDelegate) vista.getModelo()).obtenerInstanciasVocabuario(urlOWL);
        if (!individuals.contains(nombre)) {
            //No lo contiene entonces lo agrego
            ((BusinessDelegate) vista.getModelo()).agregarPalabra(nombre);
            ((BusinessDelegate) vista.getModelo()).guardarOntologiaSinonimos();
            //Ahora lo agrego al arbol
            cargarTree();

            this.invalidate();
            panelAgregarPalabra.setVisible(false);
            tfNombrePalabra.setText("");
        } else {
            JOptionPane.showMessageDialog(this,
                    "Ya existe es palabra",
                    "Asistente de Viajes", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}//GEN-LAST:event_buttonAceptarPalabraActionPerformed

private void tfNombrePalabraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNombrePalabraKeyTyped
    Character a = new Character(' ');
    if (a.equals(evt.getKeyChar())) {
        evt.setKeyChar('_');
    }
}//GEN-LAST:event_tfNombrePalabraKeyTyped

private void textFieldAgregarSinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldAgregarSinKeyTyped
    Character a = new Character(' ');
    if (a.equals(evt.getKeyChar())) {
        evt.setKeyChar('_');
    }
}//GEN-LAST:event_textFieldAgregarSinKeyTyped

private void textFieldAgregarTraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldAgregarTraKeyTyped
    Character a = new Character(' ');
    if (a.equals(evt.getKeyChar())) {
        evt.setKeyChar('_');
    }
}//GEN-LAST:event_textFieldAgregarTraKeyTyped

private void buttonRemoverPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverPalabraActionPerformed
    String instancia = eventoTree.getPath().getLastPathComponent().toString();
    if (JOptionPane.showConfirmDialog(this,
            "Esta seguro que desea eliminar la palabra ' " + instancia + " '?",
            "Asistente de Viajes", JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE) == 0) {
        ((BusinessDelegate) vista.getModelo()).removerPalabra(instancia);
        ((BusinessDelegate) vista.getModelo()).guardarOntologiaSinonimos();
        cargarTree();
    }

}//GEN-LAST:event_buttonRemoverPalabraActionPerformed

private void treeIndividualValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeIndividualValueChanged
}//GEN-LAST:event_treeIndividualValueChanged

    public void update() {
        if (cargarArbol) {
            cargarTree();
            if (cargarInstancia) {
                cargarIndividualInPanel();
            } else {
                if (isAgregarSinonimo()) {
                    agregarSinonimo();
                } else if (isAgregarTraduccion()) {
                    agregarTraduccion();
                } else if (isRemoverSinonimo()) {
                    removerSinonimo();
                } else if (isRemoverTraduccion()) {
                    removerTraduccion();
                } else {
                }
            }
        } else {
        }
    }

    public void agregarSinonimo() {
        DefaultListModel model = (DefaultListModel) listSinonimos.getModel();
        model.addElement(new String(textFieldAgregarSin.getText()));
        String instancia = labelPalabra.getText();
        ((BusinessDelegate) vista.getModelo()).agregarSinonimo(instancia, textFieldAgregarSin.getText());
        textFieldAgregarSin.setText("");
        this.panelAgregarSin.setVisible(false);
        ((BusinessDelegate) vista.getModelo()).guardarOntologiaSinonimos();
    }

    public void agregarTraduccion() {
        DefaultListModel model = (DefaultListModel) listTraduccion.getModel();
        model.addElement(new String(textFieldAgregarTra.getText()));
        String instancia = labelPalabra.getText();
        ((BusinessDelegate) vista.getModelo()).agregarTraduccion(instancia, textFieldAgregarTra.getText());
        textFieldAgregarTra.setText("");
        this.panelAgregarTraduccion.setVisible(false);
        ((BusinessDelegate) vista.getModelo()).guardarOntologiaSinonimos();
    }

    public void removerSinonimo() {
        DefaultListModel model = (DefaultListModel) listSinonimos.getModel();
        String instancia = labelPalabra.getText();
        ((BusinessDelegate) vista.getModelo()).removerSinonimo(instancia, model.getElementAt(listSinonimos.getSelectedIndex()).toString());
        model.remove(listSinonimos.getSelectedIndex());
        ((BusinessDelegate) vista.getModelo()).guardarOntologiaSinonimos();
    }

    public void removerTraduccion() {
        DefaultListModel model = (DefaultListModel) listTraduccion.getModel();
        String instancia = labelPalabra.getText();
        ((BusinessDelegate) vista.getModelo()).removerTraduccion(instancia, model.getElementAt(listTraduccion.getSelectedIndex()).toString());
        model.remove(listTraduccion.getSelectedIndex());
        ((BusinessDelegate) vista.getModelo()).guardarOntologiaSinonimos();
    }

    public void cargarIndividualInPanel() {
        String instancia = eventoTree.getPath().getLastPathComponent().toString();
        IndividualSinonimoVO individual = (IndividualSinonimoVO) ((BusinessDelegate) vista.getModelo()).obtenerIndividual(instancia);
        ArrayList<String> sinonimos = individual.getSinonimos();
        Collections.sort(sinonimos);
        ArrayList<String> traduccion = individual.getTraduccion();
        Collections.sort(traduccion);
        String nombre = individual.getNombreInstancia();
        labelPalabra.setText(nombre);
        listSinonimos.setModel(new DefaultListModel());
        DefaultListModel dlm = (DefaultListModel) listSinonimos.getModel();
        Iterator itSin = sinonimos.iterator();
        while (itSin.hasNext()) {
            dlm.addElement(itSin.next().toString());
        }
        listTraduccion.setModel(new DefaultListModel());
        DefaultListModel dlm2 = (DefaultListModel) listTraduccion.getModel();
        Iterator itTra = traduccion.iterator();
        while (itTra.hasNext()) {
            dlm2.addElement(itTra.next().toString());
        }
    }

    public void cargarTree() {
        ArrayList<String> individuals = (ArrayList<String>) ((BusinessDelegate) vista.getModelo()).obtenerInstanciasVocabuario(urlOWL);
        Collections.sort(individuals);
        DefaultMutableTreeNode abuelo = new DefaultMutableTreeNode("Palabras");
        DefaultTreeModel modelo = new DefaultTreeModel(abuelo);
        treeIndividual = new JTree(modelo);

        DefaultMutableTreeNode[] padre = new DefaultMutableTreeNode[individuals.size()];
        Iterator it = individuals.iterator();
        int i = 0;
        while (it.hasNext()) {
            padre[i] = new DefaultMutableTreeNode(it.next().toString());
            i++;
        }
        for (int j = 0; j < padre.length; j++) {
            modelo.insertNodeInto(padre[j], abuelo, j);
        }
        treeIndividual.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {

            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                buttonCargarActionPerformed(evt);
            }
        });
        ImageIcon leafIcon = new ImageIcon(Constantes.ICONINDIVIDUAL);
        if (leafIcon != null) {
            DefaultTreeCellRenderer renderer =
                    new DefaultTreeCellRenderer();
            renderer.setOpenIcon(leafIcon);
            renderer.setClosedIcon(leafIcon);
            renderer.setLeafIcon(leafIcon);
            treeIndividual.setCellRenderer(renderer);
            jScrollPane1.setViewportView(treeIndividual);
        }
        Object root = treeIndividual.getModel().getRoot();
        TreePath path = new TreePath(root);
        treeIndividual.expandPath(path);
    }

    public void setCargarArbol(boolean flag) {
        this.cargarArbol = flag;
    }

    private void initComponents2() {
        DefaultMutableTreeNode abuelo = new DefaultMutableTreeNode("Palabras");
        DefaultTreeModel modelo = new DefaultTreeModel(abuelo);
        //treeIndividual = new JTree(modelo);
        treeIndividual.setModel(modelo);

        ImageIcon leafIcon = new ImageIcon(Constantes.ICONINDIVIDUAL);
        if (leafIcon != null) {
            DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
            renderer.setOpenIcon(leafIcon);
            renderer.setClosedIcon(leafIcon);
            renderer.setLeafIcon(leafIcon);
            treeIndividual.setCellRenderer(renderer);
            jScrollPane1.setViewportView(treeIndividual);
        }

        panelAgregarPalabra.setVisible(false);
        //Crear lista mutable sinonimos

        listSinonimos.setVisibleRowCount(-1);

        //Crear lista mutable traduccion

        listTraduccion.setVisibleRowCount(-1);

        panelAgregarSin.setVisible(false);
        panelAgregarTraduccion.setVisible(false);


        String url = main.getConfiguration().getDefaultURLOWLSinonimos();
        if (url != null) {
            this.urlOWL = url;
            this.textFieldURL.setText(url);
            cargarTree();
            cargarArbol = true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAceptarPalabra;
    private javax.swing.JButton buttonAddSinonimo;
    private javax.swing.JButton buttonAddTraduccion;
    private javax.swing.JButton buttonAgregarPalabra;
    private javax.swing.JButton buttonCancelarPalabra;
    private javax.swing.JButton buttonExaminar;
    private javax.swing.JButton buttonRemoveSinonimo;
    private javax.swing.JButton buttonRemoveTraduccion;
    private javax.swing.JButton buttonRemoverPalabra;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel labelPalabra;
    private javax.swing.JList listSinonimos;
    private javax.swing.JList listTraduccion;
    private javax.swing.JPanel panelAgregarPalabra;
    private javax.swing.JPanel panelAgregarSin;
    private javax.swing.JPanel panelAgregarTraduccion;
    private javax.swing.JTextField textFieldAgregarSin;
    private javax.swing.JTextField textFieldAgregarTra;
    private javax.swing.JTextField textFieldURL;
    private javax.swing.JTextField tfNombrePalabra;
    private javax.swing.JTree treeIndividual;
    // End of variables declaration//GEN-END:variables

    public String getUrlOWL() {
        return urlOWL;
    }

    public void setUrlOWL(String urlOWL) {
        this.urlOWL = urlOWL;
    }

    public String getChooserButton() {
        return chooserButton;
    }

    public void setChooserButton(String chooserButton) {
        this.chooserButton = chooserButton;
    }

    public boolean isCargarInstancia() {
        return cargarInstancia;
    }

    public void setCargarInstancia(boolean cargarInstancia) {
        this.cargarInstancia = cargarInstancia;
    }

    public boolean isAgregarSinonimo() {
        return agregarSinonimo;
    }

    public void setAgregarSinonimo(boolean agregarSinonimo) {
        this.agregarSinonimo = agregarSinonimo;
    }

    public boolean isAgregarTraduccion() {
        return agregarTraduccion;
    }

    public void setAgregarTraduccion(boolean agregarTraduccion) {
        this.agregarTraduccion = agregarTraduccion;
    }

    public boolean isRemoverSinonimo() {
        return removerSinonimo;
    }

    public void setRemoverSinonimo(boolean removerSinonimo) {
        this.removerSinonimo = removerSinonimo;
    }

    public boolean isRemoverTraduccion() {
        return removerTraduccion;
    }

    public void setRemoverTraduccion(boolean removerTraduccion) {
        this.removerTraduccion = removerTraduccion;
    }
}
