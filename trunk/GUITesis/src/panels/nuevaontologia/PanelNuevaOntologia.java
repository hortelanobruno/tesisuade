/*
 * PanelNuevaOntologia.java
 *
 * Created on 18 de agosto de 2008, 10:02
 */

package panels.nuevaontologia;

import com.hp.hpl.jena.ontology.OntModel;
import controladores.ControladorPanelNuevaOntologia;
import gui.FileChooser;
import gui.FramePrincipal;
import java.awt.Toolkit;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.TreePath;
import jenasouforce.ApiJena;
import modelo.BusinessDelegate;
import varios.Constantes;
import vistas.VistaNuevaOntologia;

/**
 *
 * @author  Administrador
 */
public class PanelNuevaOntologia extends javax.swing.JPanel {

    private FramePrincipal main;
    private VistaNuevaOntologia vistaNuevaOntologia;
    private String urlOWL;
    private String chooserButton;
    private boolean cargarOntologia;
    private boolean nuevaOntologia;
    private TreeSelectionEvent eventoTree;
    private DefaultTreeModel modelo;
    private DefaultMutableTreeNode abuelo;
    private Toolkit toolkit = Toolkit.getDefaultToolkit();
    private HashMap<String,DefaultMutableTreeNode> mapaNodos;
    /** Creates new form PanelNuevaOntologia */
    public PanelNuevaOntologia(FramePrincipal ref, VistaNuevaOntologia vistaN) {
        this.main = ref;
        this.vistaNuevaOntologia = vistaN;
        initComponents();
        initComponents2();
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelMetadata = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textFieldURI = new javax.swing.JTextField();
        panelClasses = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeClasses = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        listProperties = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textFieldClassName = new javax.swing.JTextField();
        buttonRemoverClass = new javax.swing.JButton();
        buttonAgregarClass = new javax.swing.JButton();
        panelAgregarNombre = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        textFieldNombreClase = new javax.swing.JTextField();
        buttonOkNombre = new javax.swing.JButton();
        buttonCancelNombre = new javax.swing.JButton();
        panelProperties = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        panelTabbedObjectProperty = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listPropertiesObject = new javax.swing.JList();
        panelTabbedDatatypeProperty = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listPropertiesDatatype = new javax.swing.JList();
        panelPropertyDefault = new javax.swing.JPanel();
        panelIndividuals = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(1023, 532));

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CambiarTabbedPanel(evt);
            }
        });

        jLabel1.setText("Ontology URI");

        javax.swing.GroupLayout panelMetadataLayout = new javax.swing.GroupLayout(panelMetadata);
        panelMetadata.setLayout(panelMetadataLayout);
        panelMetadataLayout.setHorizontalGroup(
            panelMetadataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMetadataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMetadataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldURI, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(591, Short.MAX_VALUE))
        );
        panelMetadataLayout.setVerticalGroup(
            panelMetadataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMetadataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldURI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(364, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Metadata", panelMetadata);

        jScrollPane1.setViewportView(treeClasses);

        listProperties.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listProperties);

        jLabel2.setText("Hierarchy");

        jLabel3.setText("Properties");

        jButton1.setText("Remove");

        jButton2.setText("Create OP");

        jButton3.setText("Add P");

        jButton4.setText("Create DP");

        jLabel4.setText("Class");

        buttonRemoverClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/protege/class.delete.gif"))); // NOI18N
        buttonRemoverClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverClassActionPerformed(evt);
            }
        });

        buttonAgregarClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/protege/class.create.gif"))); // NOI18N
        buttonAgregarClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarClassActionPerformed(evt);
            }
        });

        jLabel7.setText("Nombre");

        buttonOkNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/protege/ok.gif"))); // NOI18N
        buttonOkNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkNombreActionPerformed(evt);
            }
        });

        buttonCancelNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/protege/cancel.gif"))); // NOI18N
        buttonCancelNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAgregarNombreLayout = new javax.swing.GroupLayout(panelAgregarNombre);
        panelAgregarNombre.setLayout(panelAgregarNombreLayout);
        panelAgregarNombreLayout.setHorizontalGroup(
            panelAgregarNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarNombreLayout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(14, 14, 14)
                .addComponent(textFieldNombreClase, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonOkNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        panelAgregarNombreLayout.setVerticalGroup(
            panelAgregarNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarNombreLayout.createSequentialGroup()
                .addGroup(panelAgregarNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAgregarNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldNombreClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(buttonOkNombre))
                    .addComponent(buttonCancelNombre))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelClassesLayout = new javax.swing.GroupLayout(panelClasses);
        panelClasses.setLayout(panelClassesLayout);
        panelClassesLayout.setHorizontalGroup(
            panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClassesLayout.createSequentialGroup()
                .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClassesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAgregarClass, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRemoverClass, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelClassesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panelClassesLayout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(34, 34, 34)
                                    .addComponent(textFieldClassName))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelClassesLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(58, 58, 58)
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton4)
                                    .addGap(6, 6, 6)
                                    .addComponent(jButton3)
                                    .addGap(6, 6, 6)
                                    .addComponent(jButton1)))))
                    .addGroup(panelClassesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(panelAgregarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        panelClassesLayout.setVerticalGroup(
            panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClassesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(buttonAgregarClass, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonRemoverClass, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAgregarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .addGroup(panelClassesLayout.createSequentialGroup()
                        .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textFieldClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(panelClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jButton2)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Classes", panelClasses);

        jLabel5.setText("Object Properties");

        jScrollPane3.setViewportView(listPropertiesObject);

        javax.swing.GroupLayout panelTabbedObjectPropertyLayout = new javax.swing.GroupLayout(panelTabbedObjectProperty);
        panelTabbedObjectProperty.setLayout(panelTabbedObjectPropertyLayout);
        panelTabbedObjectPropertyLayout.setHorizontalGroup(
            panelTabbedObjectPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabbedObjectPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTabbedObjectPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );
        panelTabbedObjectPropertyLayout.setVerticalGroup(
            panelTabbedObjectPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabbedObjectPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Object", panelTabbedObjectProperty);

        jLabel6.setText("Datatype properties");

        listPropertiesDatatype.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(listPropertiesDatatype);

        javax.swing.GroupLayout panelTabbedDatatypePropertyLayout = new javax.swing.GroupLayout(panelTabbedDatatypeProperty);
        panelTabbedDatatypeProperty.setLayout(panelTabbedDatatypePropertyLayout);
        panelTabbedDatatypePropertyLayout.setHorizontalGroup(
            panelTabbedDatatypePropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabbedDatatypePropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTabbedDatatypePropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        panelTabbedDatatypePropertyLayout.setVerticalGroup(
            panelTabbedDatatypePropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabbedDatatypePropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Datatype", panelTabbedDatatypeProperty);

        panelPropertyDefault.setPreferredSize(new java.awt.Dimension(200, 100));

        javax.swing.GroupLayout panelPropertyDefaultLayout = new javax.swing.GroupLayout(panelPropertyDefault);
        panelPropertyDefault.setLayout(panelPropertyDefaultLayout);
        panelPropertyDefaultLayout.setHorizontalGroup(
            panelPropertyDefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
        );
        panelPropertyDefaultLayout.setVerticalGroup(
            panelPropertyDefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelPropertiesLayout = new javax.swing.GroupLayout(panelProperties);
        panelProperties.setLayout(panelPropertiesLayout);
        panelPropertiesLayout.setHorizontalGroup(
            panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPropertyDefault, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        panelPropertiesLayout.setVerticalGroup(
            panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPropertiesLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelPropertyDefault, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Properties", panelProperties);

        javax.swing.GroupLayout panelIndividualsLayout = new javax.swing.GroupLayout(panelIndividuals);
        panelIndividuals.setLayout(panelIndividualsLayout);
        panelIndividualsLayout.setHorizontalGroup(
            panelIndividualsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 915, Short.MAX_VALUE)
        );
        panelIndividualsLayout.setVerticalGroup(
            panelIndividualsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Individuals", panelIndividuals);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
private void initComponents2(){
    panelAgregarNombre.setVisible(false);
    mapaNodos = new HashMap<String, DefaultMutableTreeNode>();
}

public void modoCargar(){
    ((ControladorPanelNuevaOntologia) vistaNuevaOntologia.getControlador()).doCargarOWL(true);
}

public void modoNuevo(){
    ((ControladorPanelNuevaOntologia) vistaNuevaOntologia.getControlador()).doNuevaOWL(true);
}

public void guardarOntologia(){
    //Grabar ontologia
    ((BusinessDelegate)vistaNuevaOntologia.getModelo()).grabarOntologia(urlOWL);
}

public void update() {
    if(cargarOntologia){
        cargarOntologia();
        cargarPaneles();
    }else{
        if(nuevaOntologia){
            nuevaOntologia();
            cargarPanelMetadata();
        }
    }
}

private void CambiarTabbedPanel(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CambiarTabbedPanel
// TODO add your handling code here:
    
}//GEN-LAST:event_CambiarTabbedPanel


private void buttonAgregarClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarClassActionPerformed
// TODO add your handling code here:
    panelAgregarNombre.setVisible(true);
    
}//GEN-LAST:event_buttonAgregarClassActionPerformed

private void buttonRemoverClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverClassActionPerformed
// TODO add your handling code here:
    panelAgregarNombre.setVisible(false);
    removeCurrentNode();
}//GEN-LAST:event_buttonRemoverClassActionPerformed

private void buttonOkNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkNombreActionPerformed
// TODO add your handling code here:
    if(!mapaNodos.containsKey(textFieldNombreClase.getText())){
        addObject(textFieldNombreClase.getText());
        textFieldNombreClase.setText("");
        panelAgregarNombre.setVisible(false);
    }else{
        textFieldNombreClase.setText("");
        JOptionPane.showMessageDialog(this,"Clase Existente",Constantes.APPLICATION_NAME,JOptionPane.ERROR_MESSAGE);
    }
    
}//GEN-LAST:event_buttonOkNombreActionPerformed

private void buttonCancelNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelNombreActionPerformed
// TODO add your handling code here:
    textFieldNombreClase.setText("");
    panelAgregarNombre.setVisible(false);
}//GEN-LAST:event_buttonCancelNombreActionPerformed

private void cargarPaneles(){
   cargarPanelMetadata();
   cargarPanelClases();
   cargarPanelProperty();
   cargarPanelInstancia();
}

private void cargarPanelMetadata(){
    String uri = ((BusinessDelegate)vistaNuevaOntologia.getModelo()).getURIOntologia();
    this.getTextFieldURI().setText(uri);
}

private void cargarPanelClases(){
    // Vaciar arbol
    
    
    abuelo = new DefaultMutableTreeNode("Classes");
    modelo = new DefaultTreeModel(abuelo);
    treeClasses = new JTree(modelo);
    HashMap<String,String> mapaClases = ((BusinessDelegate)vistaNuevaOntologia.getModelo()).showClasses();
    
    Set<Entry<String,String>> setClases = mapaClases.entrySet();
    Iterator itClases = setClases.iterator();
    DefaultMutableTreeNode node = null;
    while(itClases.hasNext()){
        Entry<String,String> clase = (Entry<String, String>) itClases.next();
        node = new DefaultMutableTreeNode(clase.getKey());
        mapaNodos.put(clase.getKey(), node);
    }
    itClases = setClases.iterator();
    while(itClases.hasNext()){
        Entry<String,String> clase = (Entry<String, String>) itClases.next();
        if(clase.getValue().isEmpty()){
            abuelo.add(mapaNodos.get(clase.getKey()));
        }else{
            mapaNodos.get(clase.getValue()).add(mapaNodos.get(clase.getKey()));
        }
    }
    treeClasses.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
    public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
            buttonCargarActionPerformed(evt);    
    }
    });
    jScrollPane1.setViewportView(treeClasses);
    Object root = treeClasses.getModel().getRoot();
    TreePath path = new TreePath(root);
    treeClasses.expandPath(path);
    
}

private void buttonCargarActionPerformed(javax.swing.event.TreeSelectionEvent evt) {
        // Cargar solicitud en tablas
        this.eventoTree = evt;
        if(!eventoTree.getPath().getLastPathComponent().toString().equals("Classes")){
                ((ControladorPanelNuevaOntologia) vistaNuevaOntologia.getControlador()).doCargarClase(true);
        }
}

private void cargarPanelProperty(){
    
}

private void cargarPanelInstancia(){
    
}



public void nuevaOntologia(){
    ((BusinessDelegate) vistaNuevaOntologia.getModelo()).nuevaOntologia();
}

public void cargarOntologia(){
    ((BusinessDelegate) vistaNuevaOntologia.getModelo()).cargarOntologia(getUrlOWL());       
}

private DefaultMutableTreeNode addObject(Object child) {
        DefaultMutableTreeNode parentNode = null;
        TreePath parentPath = treeClasses.getSelectionPath();
        
        if (parentPath == null) {
            parentNode = abuelo;
        } else {
            parentNode = (DefaultMutableTreeNode)
                         (parentPath.getLastPathComponent());
        }

        return addObject(parentNode, child, true);
}

private DefaultMutableTreeNode addObject(DefaultMutableTreeNode parent,
                                            Object child, 
                                            boolean shouldBeVisible) {
        DefaultMutableTreeNode childNode = 
                new DefaultMutableTreeNode(child);

        if (parent == null) {
            parent = abuelo;
        }
	
	//It is key to invoke this on the TreeModel, and NOT DefaultMutableTreeNode
        modelo.insertNodeInto(childNode, parent, 
                                 parent.getChildCount());
        mapaNodos.put(childNode.getUserObject().toString(), childNode);
        String hijo = childNode.getUserObject().toString();
        String padre = parent.getUserObject().toString();
        ((BusinessDelegate)vistaNuevaOntologia.getModelo()).addClass(hijo,padre);
        //Make sure the user can see the lovely new node.
        if (shouldBeVisible) {
            treeClasses.scrollPathToVisible(new TreePath(childNode.getPath()));
        }
        return childNode;
}

private void removeCurrentNode() {
        TreePath currentSelection = treeClasses.getSelectionPath();
        if (currentSelection != null) {
            DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode)
                         (currentSelection.getLastPathComponent());
            MutableTreeNode parent = (MutableTreeNode)(currentNode.getParent());
            if (parent != null) {
                modelo.removeNodeFromParent(currentNode);
                mapaNodos.remove(currentNode.getUserObject().toString());
                return;
            }
        } 

        // Either there was no selection, or the root was selected.
        toolkit.beep();
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAgregarClass;
    private javax.swing.JButton buttonCancelNombre;
    private javax.swing.JButton buttonOkNombre;
    private javax.swing.JButton buttonRemoverClass;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JList listProperties;
    private javax.swing.JList listPropertiesDatatype;
    private javax.swing.JList listPropertiesObject;
    private javax.swing.JPanel panelAgregarNombre;
    private javax.swing.JPanel panelClasses;
    private javax.swing.JPanel panelIndividuals;
    private javax.swing.JPanel panelMetadata;
    private javax.swing.JPanel panelProperties;
    private javax.swing.JPanel panelPropertyDefault;
    private javax.swing.JPanel panelTabbedDatatypeProperty;
    private javax.swing.JPanel panelTabbedObjectProperty;
    private javax.swing.JTextField textFieldClassName;
    private javax.swing.JTextField textFieldNombreClase;
    private javax.swing.JTextField textFieldURI;
    private javax.swing.JTree treeClasses;
    // End of variables declaration//GEN-END:variables

    public String getUrlOWL() {
        return urlOWL;
    }

    public void setUrlOWL(String urlOWL) {
        this.urlOWL = urlOWL;
    }

    public String getChooserButton() {
        return chooserButton;
    }

    public void setChooserButton(String chooserButton) {
        this.chooserButton = chooserButton;
    }

    public boolean isCargarOntologia() {
        return cargarOntologia;
    }

    public void setCargarOntologia(boolean cargarOntologia) {
        this.cargarOntologia = cargarOntologia;
    }

    public boolean isNuevaOntologia() {
        return nuevaOntologia;
    }

    public void setNuevaOntologia(boolean nuevaOntologia) {
        this.nuevaOntologia = nuevaOntologia;
    }

    public javax.swing.JTextField getTextFieldURI() {
        return textFieldURI;
    }

    public void setTextFieldURI(javax.swing.JTextField textFieldURI) {
        this.textFieldURI = textFieldURI;
    }

}
