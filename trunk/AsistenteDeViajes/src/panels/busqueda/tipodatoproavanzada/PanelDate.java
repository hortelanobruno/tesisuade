/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelDate.java
 *
 * Created on 15/03/2009, 15:14:18
 */
package panels.busqueda.tipodatoproavanzada;

import java.util.Calendar;

/**
 *
 * @author Brunoli
 */
public class PanelDate extends javax.swing.JPanel implements PanelTipoDato {

    private String nombrePropiedad;

    /** Creates new form PanelDate */
    public PanelDate(String nombre) {
        initComponents();
        this.nombrePropiedad = nombre;
        ponerNombre(nombre);
        this.dateChooser.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser = new com.toedter.calendar.JDateChooser();
        labelNombre = new javax.swing.JLabel();
        cbActived = new javax.swing.JCheckBox();

        dateChooser.setName("dateChooser"); // NOI18N

        labelNombre.setText("Nombre:");
        labelNombre.setName("labelNombre"); // NOI18N

        cbActived.setName("cbActived"); // NOI18N
        cbActived.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbActivedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbActived)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(cbActived)
                .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbActivedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbActivedActionPerformed
        dateChooser.setEnabled(cbActived.isSelected());
        if (!cbActived.isSelected()) {
            dateChooser.cleanup();
        }
}//GEN-LAST:event_cbActivedActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbActived;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel labelNombre;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object getValue() {
        if(dateChooser.getCalendar()!=null){
            return formatearFecha(dateChooser.getCalendar());
        }
        return null;
    }

    private void ponerNombre(String nombre) {
        nombre = nombre.replace("_", " ");
        nombre += ":";
        labelNombre.setText(nombre);
    }

    @Override
    public boolean isActived() {
        return cbActived.isSelected();
    }

    @Override
    public boolean checkInput() {
        if (dateChooser.getCalendar() == null) {
            return false;
        }
        return true;
    }

    @Override
    public void clearData() {
        dateChooser.cleanup();
        cbActived.setEnabled(false);
    }

    @Override
    public String getNombre() {
        return nombrePropiedad;
    }

    private String formatearFecha(Calendar date) {
        int year = date.getTime().getYear() + 1900;
        int month = date.getTime().getMonth() + 1;
        if (month < 10) {
            if (date.getTime().getDate() < 10) {
                return year + "-0" + month + "-0" + date.getTime().getDate();
            } else {
                return year + "-0" + month + "-" + date.getTime().getDate();
            }
        } else {
            if (date.getTime().getDate() < 10) {
                return year + "-" + month + "-0" + date.getTime().getDate();
            } else {
                return year + "-" + month + "-" + date.getTime().getDate();
            }
        }
    }
}
